@using Sandbox;
@using System
@using Sandbox.UI;

@implements INavigatorPage
@namespace HC2

<root>
    <div class="canvas">
        <div class="column">
            <div class="title">
                HC2
            </div>

            @if ((MenuRoot.Instance?.IsPauseMenu ?? false) )
            {
                @if ( TryGetWorldSave() is { } world )
                {
                    <label>World: @world.Name</label>
                    <label>Creation Time: @(world.CreatedAt.ToString("dd/MM/yyyy HH:mm"))</label>
                    <label>Last Saved: @(world.LastSaved.ToString("dd/MM/yyyy HH:mm"))</label>

                    <div class="column gap" style="width: 256px;">
                    <div class="button" onclick=@(() => SaveWorld())>Save World</div>
                        <a class="button" href="/">Return</a>
                    </div>
                }
                else
                {
                    <label>This world hasn't been saved yet, save it to ensure you don't lose any progress!</label>

                    <div class="column gap" style="width: 256px;">
                        <TextEntry placeholder="My World" @ref="WorldNameTextEntry" />
                        <div class="button" onclick=@(() => SaveWorld()) >Save World</div>
                        <a class="button" href="/">Return</a>
                    </div>
                }
            }
            else
            {
                <div class="column gap" style="width: 256px;">
                    <div class="button" @onclick="@(() => CreateNewWorld() )">Create New World</div>

                    <div class="worlds column gap">
                        @foreach ( var save in WorldPersistence.GetWorlds() )
                        {
                            <div class="button" @onclick=@(() => LoadWorld(save)) >@(save.Name) @(save.CreatedAt.ToString("dd/MM/yyyy HH:mm")</div>
                        }
                    </div>

                    <div class="button" @onclick="@(() => JoinSomeoneElse() )">Join a Friend</div>
                    <a class="button" href="/">Return</a>
                </div>
            }
        </div>
    </div>
</root>

@code
{
    public TextEntry WorldNameTextEntry { get; set; }


    WorldSave TryGetWorldSave()
    {
        if ( string.IsNullOrEmpty( WorldPersistence.FileToLoad ) )
            return null;

        try
        {
            var world = FileSystem.Data.ReadJson<WorldSave>( WorldPersistence.FileToLoad );
            return world;
        }
        catch
        {
            Log.Warning( "Couldn't deserialize world for some reason" );
            return null;
        }
    }

    void SaveWorld()
    {
        var persistence = Game.ActiveScene.GetAllComponents<WorldPersistence>().FirstOrDefault();

        // Name is already set and decided if we're not doing this for the first time
        if ( WorldNameTextEntry is not null )
        {
            var name = WorldNameTextEntry.Text;

            if (string.IsNullOrEmpty(name))
            {
                return;
            }

            persistence.WorldName = name;
        }

        persistence.SaveToFile();

        this.Navigate("/");
    }

    void CreateNewWorld()
    {
        WorldPersistence.FileToLoad = null;
        Play();
    }

    void Play()
    {
        var sceneFile = ResourceLibrary.Get<SceneFile>( "scenes/procgen.scene" );
        Scene.Load( sceneFile );
    }

    async void LoadWorld( WorldSave save )
    {
        WorldPersistence.FileToLoad = save.FilePath;

        Play();

        Log.Info( $"Loaded {save} in!" );
    }

    async void JoinSomeoneElse()
    {
        WorldPersistence.FileToLoad = null;

        var joined = await global::Networking.TryJoinLobby();
        if ( !joined )
        {
            Log.Warning( "Nobody to play with :(" );
        }
    }
}
