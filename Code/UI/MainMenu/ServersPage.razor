@using Sandbox;
@using System;
@using System.Threading.Tasks;
@using Sandbox.UI;
@using Sandbox.Network;

@implements INavigatorPage
@namespace HC2
@attribute [StyleSheet]

<root>
    <div class="canvas">
        <div class="column justify-center">
            <label class="title">
                Server List
            </label>

            <div class="column gap" style="width: 256px;">
                <div class="servers column gap">
                    @if (!refreshing && list.Count > 0)
                    {
                        @foreach (var lobby in list)
                        {
                            <div class="server button row" onclick=@(() => JoinLobby(lobby))>
                                <label class="server-name">@lobby.Name</label>
                                <label class="players">@lobby.Members / @lobby.MaxMembers</label>
                            </div>
                        }
                    }
                </div>
                <a class="button" href="/worlds">Return</a>
            </div>
        </div>
    </div>
</root>

@code
{
    List<LobbyInformation> list = new();
    bool refreshing = true;

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        if (firstTime)
        {
            _ = RefreshLobbyList();
        }
    }

    async Task RefreshLobbyList()
    {
        while (true)
        {
            await Refresh();

            await Task.DelayRealtimeSeconds(5f);
        }
    }

    async Task Refresh()
    {
        refreshing = true;
        StateHasChanged();

        list = await Networking.QueryLobbies();

        refreshing = false;
        StateHasChanged();
    }

    void JoinLobby(LobbyInformation lobby)
    {
        GameNetworkSystem.Connect(lobby.LobbyId);
    }
}
