@using Sandbox;
@using Sandbox.UI;
@inherits Panel
@namespace HC2
@attribute [StyleSheet]

@{
	var experience = Player.Local?.Experience;
	if ( !experience.IsValid() ) return;
	var modifier = experience.Components.Get<StatModifier>();
}
<root class="stats-menu @(isStatsMenuOpen ? "visible" : "")">
	<div class="stats-panel">
		<label class="title">Stat Upgrades</label>
		<div class="stats">
			@foreach(var stat in ResourceLibrary.GetAll<StatusEffect>().Where(x => x.Type == StatusEffect.StatusType.Stat))
			{
				<div class="stat">
					<label class="name">@stat.Name</label>
					<div class="count">
						<label>@(modifier?.GetStatusCount(stat) ?? 0)/@(experience.MaxUpgrades)</label>
						@if(experience.UnspentUpgrades > 0)
						{
							<div class="btn" onclick=@(() => GiveStat(stat))>+</div>
						}
					</div>
				</div>
			}
		</div>
		<label class="title">@(experience.UnspentUpgrades) Points</label>
		<label class="small">Press @Input.GetButtonOrigin( "Score" ).ToUpperInvariant() to close</label>
	</div>
</root>


@code
{

	bool isStatsMenuOpen = false;

	void GiveStat(StatusEffect status)
	{
		var experience = Player.Local?.Experience;

		experience.UpgradeStat(status);
	}

	public override void Tick ()
	{
		base.Tick();

		// TAB Button
		if ( Input.Pressed( "Score" ) )
		{
			isStatsMenuOpen = !isStatsMenuOpen;
		}
	}

	protected override int BuildHash () => System.HashCode.Combine( isStatsMenuOpen );
}
