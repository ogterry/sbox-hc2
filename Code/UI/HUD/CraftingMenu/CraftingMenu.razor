@using System
@using Sandbox
@using Sandbox.UI
@using HC2
@attribute [StyleSheet]

@inherits Panel

<root>
    <div class="column gap">
        @foreach (var group in ItemAsset.GetRecipeGroups())
        {
            <div class="column gap">
                <label class="large">@group.Key</label>
                <div class="column gap">
                    @foreach (var item in group)
                    {
                        <CraftingMenuEntry class=@(((Player.Local?.Inventory?.CanCraftItem(item) ?? false) ? "" : "disabled") + (item == SelectedItem ? " active" : "")) Item=@item onclick=@(() => SelectItem(item)) />
                    }
                </div>
            </div>
        }
    </div>

    @if (SelectedItem is not null)
    {
        <div class="selected-item column">
            <div class="header">
                <img src="@SelectedItem.GetIcon()" />
                <div class="info column">
                    <label class="large">@SelectedItem.Name</label>
                    <label class="small">@SelectedItem.Description</label>
                </div>
            </div>
            <div class="requirements column">
                @foreach (var entry in SelectedItem.CraftingRequirements)
                {
                    <div class="entry">
                        <img src="@entry.Resource.GetIcon()" />
                        <label class="small">@entry.Resource.Name</label>
                        <div style="flex-grow: 1;" />
                        <label class="small">x@(entry.Amount)</label>
                    </div>
                }
            </div>
            <div class="button" onclick=@CraftSelected>
                <label>@(Player.Local?.Inventory?.CanCraftItem(SelectedItem) ?? false ? "Craft" : "Not enough resources")</label>
                <div style="flex-grow: 1;" />
                <label>x@(SelectedItem.CraftingYield)</label>
            </div>
        </div>
    }
</root>

@code
{
    ItemAsset SelectedItem = null;

    void SelectItem(ItemAsset item)
    {
        SelectedItem = item;
    }

    void CraftSelected()
    {
        if (SelectedItem is null) return;

        // This will fail if !CanCraftItem
        Player.Local.Inventory.CraftItem(Item.Create(SelectedItem));
    }
}
