@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent
@namespace HC2

@{
	var experience = Player.Local?.Experience;
	if (!experience.IsValid()) return;
}
<root>
	<div class="xp-header">
		<AnimatedExperienceBar Value=@((float)experience.Points / experience.MaxPoints) Text="XP: @(experience.Points) / @(experience.MaxPoints)" />
		<div class="xp-content">
			<label class="current-level">Level @(experience.Level)</label>
			<div class="level-up-toast @ToastClasses()">
				<label class="upgrades">You have @(experience.UnspentUpgrades) Stat Upgrades Available</label>
				<label class="prompt">Press TAB to open the Stats Menu</label>
			</div>
			<div @ref="HistoryList" class="history-list">
			
			</div>
		</div>
	</div>

	<StatUpgradesPanel />
</root>

@code
{
	bool hasInitialized = false;
	RealTimeSince timeSinceLevelUp = 0;

	Panel HistoryList { get; set; }

	protected override void OnUpdate()
	{
		var experience = Player.Local?.Experience;
		if(!experience.IsValid())
		{
			hasInitialized = false;
			return;
		}

		if(!hasInitialized)
		{
			experience.OnGivePoints += OnPointsGained;
			experience.OnGiveLevels += OnLevelsGained;
			hasInitialized = true;
		}
	}

	protected override void OnDestroy ()
	{
		var experience = Player.Local?.Experience;
		if(!experience.IsValid())
			return;

		experience.OnGivePoints -= OnPointsGained;
		experience.OnGiveLevels -= OnLevelsGained;
	}

	void OnPointsGained( int points )
	{
		if(!HistoryList.IsValid())
			return;

		var entry = new ExperienceHistoryEntry();
		entry.Points = points;
		HistoryList.AddChild(entry);
	}

	void OnLevelsGained(int levels)
	{
		timeSinceLevelUp = 0;
	}

	string ToastClasses()
	{
		var classes = "";
		if (Player.Local?.Experience.UnspentUpgrades != 0)
			classes += "visible ";
		if (timeSinceLevelUp < 5)
			classes += "large ";
		return classes;
	}

	protected override int BuildHash () => System.HashCode.Combine( Player.Local?.Experience?.Points, ToastClasses() );
}
