@using System
@using Sandbox
@using Sandbox.UI
@using HC2
@attribute [StyleSheet]

@inherits Panel

@{
	if (!Hotbar.IsValid()) return;
}

<root class="@(InventoryOpen ? "visible" : "")">
	<div class="inventory">
		@for (var i = 0; i < Inventory.MaxSlots; i++)
		{
			var item = Inventory.GetItemInSlot(i);
			<ItemSlot Item=@item SlotIndex=@i />
		}
	</div>

	<div class="container">
		@for (var i = 0; i < Hotbar.MaxSlots; i++)
		{
			var item = Hotbar.GetItemInSlot(i);
			<ItemSlot class="@(Hotbar.SelectedSlot == i ? "active" : "")" Item=@item SlotIndex=@i />
		}
	</div>
</root>

@code
{
    public Hotbar Hotbar => Player.Local?.Hotbar;
    public Inventory Inventory => Player.Local?.Inventory;

    bool InventoryOpen { get; set; }

    bool IsDragging { get; set; }
    bool WantsToDrag { get; set; }
    Vector2 StartMousePos { get; set; }

    /// <summary>
    /// The current hovered slot we'll use to do stuff with
    /// </summary>
    public static ItemSlot HoveredSlot { get; set; }

    ItemSlot DraggingItem { get; set; }

    protected override void OnMouseDown( MousePanelEvent e )
    {
        if ( e.MouseButton == MouseButtons.Left )
        {
            IsDragging = false;
            WantsToDrag = true;
            StartMousePos = Mouse.Position / Screen.Size;
        }
    }

    protected override void OnMouseUp( MousePanelEvent e )
    {
        if ( e.MouseButton == MouseButtons.Left )
        {
            var mousePos = Mouse.Position / Screen.Size;

            StopDragging();
        }
    }

    void StartDragging()
    {

    }

    void StopDragging()
    {
        
    }

    public override void Tick()
    {
        if (Input.Pressed("Score"))
        {
            InventoryOpen = !InventoryOpen;
        }

        if ( InventoryOpen )
        {
            var mousePos = Mouse.Position / Screen.Size;

            if ( DraggingItem is null && IsDragging )
            {
                StopDragging();
                return;
            }

            // Have we moved a little, and are not dragging already?
            if ( mousePos.Distance( StartMousePos ) > .005 && WantsToDrag )
                StartDragging();
        }
    }

	protected override int BuildHash()
	{
		var hc = new HashCode();

		hc.Add(InventoryOpen);

		if (!Hotbar.IsValid()) return hc.ToHashCode();

		hc.Add(Hotbar.SelectedSlot);

		var hotbar = Hotbar;
		hc.Add(hotbar);

		if (hotbar.IsValid())
		{
			foreach (var item in hotbar.GetAllItems())
			{
				hc.Add(item);
				hc.Add(item.Amount);
			}
		}

		var inventory = Inventory;
		hc.Add(inventory);

		if (inventory.IsValid())
		{
			foreach (var item in inventory.GetAllItems())
			{
				hc.Add(item);
				hc.Add(item.Amount);
			}
		}



		return hc.ToHashCode();
	}
}
